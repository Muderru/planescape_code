+--------------------------------------------+
| МПМ "Грани Мира", руководство разработчика |
+--------------------------------------------+

----------
Оглавление
----------
       I. Системные требования
          1.1 Операционные системы
          1.2 Необходимые пакеты

      II. Работа с репозиторием
          2.1 Клиент svn 
          2.2 Клиент tortoise
          2.3 Первичный экспорт

     III. Сборка и запуск 
          3.1 Краткая инструкция для нетерпеливых
          3.2 Подробная инструкция


=========================================================================
I. Системные требования
=========================================================================

------------------------
1.1 Операционные системы
------------------------
Код гарантированно собирается и работает на след. системах:
  * Linux Debian amd64 
    (в режиме 32-bit приложения, при наличии 32-bit библиотек и компилятора)
  * Linux Slackware i686

Планируется поддержка:
  * Windows mingw + cygwin
    (И planescape, и libdreamland исторически собираются под mingw,
    нужно обобщить систему define и посмотреть, что у нас получилось
    после скрещивания.)

  * FreeBSD 
    (Используемая в муде фишка: посылать новый SIGSEGV изнутри обработчика
    SIGSEGV - срабатывает в Linux, но приводит к мертвому циклу на FreeBSD.)

----------------------
1.2 Необходимые пакеты
----------------------
Для сборки необходимы пакеты с версиями не ниже указанных:
  * gcc 4.2
  * autoconf-2.59
  * automake-1.8
  * libtool-1.5
  * bison 1.75
  * flex 2.5.35
  * Berkley DB 
    libdb4.2       - C API для работы с базой
    libdb4.2++     - C++ API 
    libdb4.2++-dev - заголовочные файлы
    NOTE: На debian amd64 эти библиотеки необходимо устанавливать в версии i386.
          Если простой apt-get libdb4.6++ не срабатывает, используйте
          dpkg -X libdb4.6++_4.6.21-11_i386.deb /emul/ia32-linux
          для предварительно скачанного пакета.

=========================================================================
II. Работа с репозиторием
=========================================================================
Проект использует SVN для системы контроля версий. Исходные коды, зоны
и ресурсы хранятся в различных репозиториях. Базовый url для всех:
svn+ssh://psdev@svn.planescape.ru/, порт 2222, для доступа необходим
приватный ключ, который выдают администраторы. 

--------------
2.1 Клиент svn
--------------
Для работы с command-line клиентом svn (который есть и под cygwin, и в *никс),
удобны такие варианты настоек:

    1й вариант:
    $ export SVN_SSH='ssh -p 2222 -i ~/.ssh/your.key'
    $ svn co svn+ssh://psdev@svn.planescape.ru/garbage
    
    2й вариант:
    добавить в ~/.ssh/ssh_config запись: 
    Host psmud
    Hostname svn.planescape.ru
    User psdev
    Port 2222
    IdentityFile your.key
    ForwardAgent no
    ForwardX11 no

    $ svn co svn+ssh://psmud/garbage

-------------------
2.2 Клиент tortoise
-------------------
TODO: допишите, кто в нем шарит.

---------------------
2.3 Первичный экспорт 
---------------------
TODO: дописать, когда определимся со структурой реп и настроим file-structure.
Текущая версия исходников лежит в svn+ssh://psmud/source-code/server.old/trunk.


=========================================================================
III. Сборка и запуск
=========================================================================

---------------------------------------
3.1 Краткая инструкция для нетерпеливых
---------------------------------------
После экспорта или очередного обновления исходников из SVN, используйте:
    $ make -f Makefile.svn
    $ ./configure
    $ make 
    $ make install

Скопируйте сюда же каталог с зонами и ресурсами 'share' - и муд готов к запуску:
    $ ./bin/planescape etc/planescape.xml &

Порт по умолчанию 4000, логи смотреть в var/log/дата-время.log.

------------------------
3.2 Подробная инструкция
------------------------
Можно, конечно, и собирать и запускать мир из того же каталога, где
лежат исходники -- как описано в примере выше. Однако обычно удобней
разделить исходники, 'точку сборки' и инсталляцию.
Пусть каталог с исходниками называется ps_sources, собираться проект
будет в ps_objs, а инсталлиться (и запускаться) в ps_runtime.
Тогда после обновления из SVN:
    $ cd /path/to/ps_sources 
    $ make -f Makefile.svn
    $ cd /path/to/ps_objs 
    $ /path/to/ps_sources/configure --prefix=/path/to/ps_runtime
      У configure есть и другие опции, их видно по ключу --help.

    $ make -j N
      Распараллелить компиляцию, N=3..10 в зависимости от кол-ва
      процессоров в системе.

    $ make install

После этого в ps_runtime появятся каталоги:
       bin: с исполняемым файлом муда planescape
       etc: с глобальным конфигурационным профайлом planescape.xml
       lib: с библиотеками
   libexec: с файлом конфигурации плагинов plugin.xml и всеми плагинами
       var: 
           db: здесь будут храниться различные runtime данные муда 
               (профайлы игроков, скриптовая база, статистика, доски и т.д.)
          log: логи 
         mail: сюда кладутся регистрационные письма игрокам для последующей
               отправки из крона
          run: файлы из этого каталога используется стартовым скриптом
               autorun.sh

Все пути задаются в профайле planescape.xml. Запускать мир можно откуда
угодно, однако надо удостовериться, что basePath, относительно которого
будут высчитываться все остальные пути, задан правильно. 

Некоторые опции из профайла можно перекрыть опциями командной строки,
их список виден по 'planescape -h'.

Логи пишутся туда, куда указывает поле профайла logPattern, по умолчанию
в var/log/дата-время.log, это можно перекрыть опцией -o, например, -o ''
заставит плевать логи в stdout.


=========================================================================

P.S. Если возникнут вопросы, автору по рогам стучать сюда: ruffina@planescape.ru

